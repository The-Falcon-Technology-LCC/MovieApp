// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MovieApp.DAL;

#nullable disable

namespace MovieApp.DAL.Migrations
{
    [DbContext(typeof(MovieAppDbContext))]
    partial class MovieAppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.9");

            modelBuilder.Entity("MovieApp.Model.Director", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DOB")
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Director");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DOB = new DateTime(1967, 10, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Denis",
                            LastName = "Villeneuve"
                        },
                        new
                        {
                            Id = 2,
                            DOB = new DateTime(1970, 7, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Christopher",
                            LastName = "Nolan"
                        },
                        new
                        {
                            Id = 3,
                            DOB = new DateTime(1963, 3, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Quentin",
                            LastName = "Tarantino"
                        });
                });

            modelBuilder.Entity("MovieApp.Model.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Genre");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Thriller"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Drama"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Action"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Comedy"
                        });
                });

            modelBuilder.Entity("MovieApp.Model.GenreMovie", b =>
                {
                    b.Property<int>("GenreId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MovieId")
                        .HasColumnType("INTEGER");

                    b.HasKey("GenreId", "MovieId");

                    b.HasIndex("MovieId");

                    b.ToTable("GenreMovie");

                    b.HasData(
                        new
                        {
                            GenreId = 1,
                            MovieId = 1
                        },
                        new
                        {
                            GenreId = 2,
                            MovieId = 1
                        },
                        new
                        {
                            GenreId = 3,
                            MovieId = 1
                        },
                        new
                        {
                            GenreId = 1,
                            MovieId = 2
                        },
                        new
                        {
                            GenreId = 3,
                            MovieId = 2
                        },
                        new
                        {
                            GenreId = 1,
                            MovieId = 3
                        },
                        new
                        {
                            GenreId = 3,
                            MovieId = 3
                        },
                        new
                        {
                            GenreId = 1,
                            MovieId = 4
                        },
                        new
                        {
                            GenreId = 3,
                            MovieId = 5
                        },
                        new
                        {
                            GenreId = 4,
                            MovieId = 5
                        },
                        new
                        {
                            GenreId = 3,
                            MovieId = 6
                        });
                });

            modelBuilder.Entity("MovieApp.Model.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("DirectorId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DirectorId");

                    b.ToTable("Movie");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "K, an officer with the Los Angeles Police Department, unearths a secret that could create chaos. He goes in search of a former blade runner who has been missing for over three decades.",
                            DirectorId = 1,
                            Title = "Blade Runner 2049"
                        },
                        new
                        {
                            Id = 2,
                            Description = "During a dangerous mission to stop a drug cartel operating between the US and Mexico, Kate Macer, an FBI agent, is exposed to some harsh realities.",
                            DirectorId = 1,
                            Title = "Sicario"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Cobb steals information from his targets by entering their dreams. Saito offers to wipe clean Cobb's criminal history as payment for performing an inception on his sick competitor's son.",
                            DirectorId = 2,
                            Title = "Inception"
                        },
                        new
                        {
                            Id = 4,
                            Description = "When Earth becomes uninhabitable in the future, a farmer and ex-NASA pilot, Joseph Cooper, is tasked to pilot a spacecraft, along with a team of researchers, to find a new planet for humans.",
                            DirectorId = 2,
                            Title = "Interstellar"
                        },
                        new
                        {
                            Id = 5,
                            Description = "In the realm of underworld, a series of incidents intertwines the lives of two Los Angeles mobsters, a gangster's wife, a boxer and two small-time criminals.",
                            DirectorId = 3,
                            Title = "Pulp Fiction"
                        },
                        new
                        {
                            Id = 6,
                            Description = "Six criminals, hired to steal diamonds, do not know each other's true identity. While attempting the heist, the police ambushes them, leading them to believe that one of them is an undercover officer.",
                            DirectorId = 3,
                            Title = "Reservoir Dogs"
                        });
                });

            modelBuilder.Entity("MovieApp.Model.GenreMovie", b =>
                {
                    b.HasOne("MovieApp.Model.Genre", "Genre")
                        .WithMany("GenreMovie")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MovieApp.Model.Movie", "Movie")
                        .WithMany("GenreMovie")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Genre");

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("MovieApp.Model.Movie", b =>
                {
                    b.HasOne("MovieApp.Model.Director", "Director")
                        .WithMany("Movies")
                        .HasForeignKey("DirectorId");

                    b.Navigation("Director");
                });

            modelBuilder.Entity("MovieApp.Model.Director", b =>
                {
                    b.Navigation("Movies");
                });

            modelBuilder.Entity("MovieApp.Model.Genre", b =>
                {
                    b.Navigation("GenreMovie");
                });

            modelBuilder.Entity("MovieApp.Model.Movie", b =>
                {
                    b.Navigation("GenreMovie");
                });
#pragma warning restore 612, 618
        }
    }
}
